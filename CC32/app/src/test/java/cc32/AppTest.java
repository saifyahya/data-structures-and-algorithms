/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package CC32.app.src.test.java.cc32;

import CC15.app.src.main.java.cc15.app.BinaryTree;
import CC32.app.src.main.java.cc32.TreeIntersection;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void testTreeIntersection(){
        BinaryTree tree1 = new BinaryTree();
        tree1.createBinaryTree();   //    3 <--1--> 2

        BinaryTree tree2 = new BinaryTree();   //    2 <--1--> 7  => 9 <--2--> 12 => 15 <--7--> 3
        BinaryTree.TreeNode root = new BinaryTree.TreeNode<>(1);
        tree2.setRoot(root);
        BinaryTree.TreeNode left = new BinaryTree.TreeNode<>(2);
        BinaryTree.TreeNode right = new BinaryTree.TreeNode<>(7);
        root.setLeft(left);
        root.setRight(right);
        BinaryTree.TreeNode left2 = new BinaryTree.TreeNode<>(9);
        BinaryTree.TreeNode right2 = new BinaryTree.TreeNode<>(12);
        left.setLeft(left2);
        left.setRight(right2);
        BinaryTree.TreeNode left3 = new BinaryTree.TreeNode<>(15);
        BinaryTree.TreeNode right3 = new BinaryTree.TreeNode<>(3);
        right.setLeft(left3);
        right.setRight(right3);
        List<Integer> expectedIntersections = List.of(1,2,3);
        Assertions.assertEquals(expectedIntersections, TreeIntersection.treeIntersection(tree1,tree2));
    }
}
